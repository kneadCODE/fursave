---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: database
data:
  POSTGRES_DB: ledgersvc
  POSTGRES_USER: ledgersvc
  POSTGRES_INITDB_ARGS: "--data-checksums"
  POSTGRES_HOST_AUTH_METHOD: scram-sha-256
  PGDATA: /var/lib/postgresql/data/pgdata
  POSTGRES_REPLICATION_USER: replicator
  POSTGRES_MAX_CONNECTIONS: "100"
  PRIMARY_HOST: postgres-0.postgres
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: database
type: Opaque
stringData:
  POSTGRES_PASSWORD: "change-me-in-production"
  POSTGRES_REPLICATION_PASSWORD: "change-me-in-production"
  APP_DB_USERNAME: "ledgersvc_app"
  APP_DB_PASSWORD: "change-me-in-production"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: database
spec:
  serviceName: postgres
  selector:
    matchLabels:
      app.kubernetes.io/name: postgres
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgres
        app.kubernetes.io/component: database
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: postgres
                topologyKey: kubernetes.io/hostname
      serviceAccountName: ledgersvc-app-sa
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      initContainers:
        - name: init-postgres
          image: postgres:17-alpine
          imagePullPolicy: IfNotPresent
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 1000
          command:
            - /bin/bash
            - -c
            - |
              if [[ $(hostname) == ledgersvc-postgres-0 ]]; then
                echo "Running as primary"
              else
                echo "Running as replica"
                rm -rf /var/lib/postgresql/data/pgdata/*
              fi
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
              subPath: pgdata
      containers:
        - name: postgres
          image: postgres:17-alpine
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 1000
          ports:
            - containerPort: 5432
              name: postgres
          envFrom:
            - configMapRef:
                name: postgres-config
            - secretRef:
                name: postgres-secret
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POSTGRES_REPLICATION_MODE
              value: "$(POD_NAME == 'ledgersvc-postgres-0' ? 'master' : 'slave')"
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
              subPath: pgdata
          resources: {}
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -h
                - localhost
                - -p
                - "5432"
                - -U
                - ledgersvc
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 3
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -h
                - localhost
                - -p
                - "5432"
                - -U
                - ledgersvc
            initialDelaySeconds: 30
            periodSeconds: 15
            failureThreshold: 5
  volumeClaimTemplates:
    - metadata:
        name: postgres-data
      spec:
        volumeMode: Filesystem
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: database
spec:
  selector:
    app.kubernetes.io/name: postgres
  ports:
    - port: 5432
      targetPort: postgres
