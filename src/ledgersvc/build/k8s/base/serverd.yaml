apiVersion: apps/v1
kind: Deployment
metadata:
  name: serverd
  labels:
    app.kubernetes.io/name: serverd
    app.kubernetes.io/instance: serverd
    app.kubernetes.io/component: deployment
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: serverd
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: "50%"
      maxUnavailable: "25%"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: serverd
        app.kubernetes.io/instance: serverd
        app.kubernetes.io/component: serverd
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - serverd
                topologyKey: kubernetes.io/hostname
      serviceAccountName: ledgersvc-app-sa
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: serverd
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
          image: image-serverd:unknown
          command: ["./serverd"]
          ports:
            - containerPort: 80
              name: http
          env:
            - name: USER
              value: "1000"
            - name: PORT
              value: "80"
            - name: OTEL_SERVICE_NAME
              value: ledgersvc
            - name: OTEL_SERVICE_NAMESPACE
              value: fursave
            - name: OTEL_SERVICE_VERSION
              value: v0.0.0
            - name: OTEL_DEPLOYMENT_ENVIRONMENT
              value: development
          livenessProbe:
            httpGet:
              path: /_/ping
              port: 80
            initialDelaySeconds: 45
            periodSeconds: 10
            failureThreshold: 3
            timeoutSeconds: 5
          # readinessProbe:
          #   httpGet:
          #     path: /_/ready
          #     port: 80
          #   initialDelaySeconds: 5
          #   periodSeconds: 10
          #   failureThreshold: 3
          #   timeoutSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: serverd
  labels:
    app.kubernetes.io/name: serverd
    app.kubernetes.io/instance: serverd
    app.kubernetes.io/component: service
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: serverd
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      name: http
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: serverd
  app.kubernetes.io/instance: serverd
  app.kubernetes.io/component: pdb
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: serverd
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: serverd
  app.kubernetes.io/instance: serverd
  app.kubernetes.io/component: hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: serverd
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 70
