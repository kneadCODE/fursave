name: "CI"
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  ####### CI Stage Start ######
  init:
    name: Init
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Print run info
        uses: ./.github/actions/print-run-info
      - name: Print inputs context
        run: echo "${{ toJSON(inputs) }}"

  ####### Run tests & Docker Build Start ######
  test-and-build:
    name: Test & Build
    needs: [ init ]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        service: [ golib, ledgersvc ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Disabling shallow clone for SonarQube
      - name: Run setup
        run: make ${{ matrix.service }}-setup
      - name: Run tests
        run: make ${{ matrix.service }}-test
      - name: Build binaries
        if: ${{ !endsWith(matrix.service, 'lib') }}
        run: make ${{ matrix.service }}-build-binaries
      - name: SonarQube scan
        uses: ./.github/actions/sonarqube-scan
        with:
          token: ${{ secrets[format('SONAR_TOKEN_{0}', matrix.service)] }}
          project-dir: src/${{ matrix.service }}/
      - name: Codacy coverage report
        run: make -f build/Makefile ${{ matrix.service }}-codacy-coverage
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
      - name: Docker Build/Push
        if: ${{ !endsWith(matrix.service, 'lib') }}
        uses: ./.github/actions/docker-build-push
        with:
          service: ${{ matrix.service }}
          registry: ghcr.io
          registry-username: ${{ github.actor }}
          registry-password: ${{ secrets.GITHUB_TOKEN }}
          image-prefix: ${{ github.repository }}
          push: ${{ github.event_name != 'pull_request' }}
  ####### Run tests & Docker Build End ######

  ####### SAST Start ######
  sonar-scan-root:
    name: SonarQube scan root
    needs: [init]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Disabling shallow clone for SonarQube
      - name: SonarQube Scan
        uses: ./.github/actions/sonarqube-scan
        with:
          token: ${{ secrets.SONAR_TOKEN_BASE }}

  codacy-coverage-report-final:
    name: Codacy coverage report final
    needs: [ test-and-build ]
    runs-on: ubuntu-latest
    steps:
      - name: Report
        run: bash <(curl -Ls https://coverage.codacy.com/get.sh) final
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
  ####### SAST End ######

  ####### CI Stage End ######


  ####### CD Stage ######
  trigger-cd:
    name: CD
    needs: [codacy-coverage-report-final]
    if: ${{ github.event_name != 'pull_request' }}
    uses: ./.github/workflows/cd.yml
    with:
      environment: STAGING
