name: Docker Build/Push
description: 'Build and push Docker images'
inputs:
  project:
    description: 'The project name in src/'
    required: true
  registry:
    description: 'The registry name'
    required: true
  registry-username:
    description: 'The username for the registry to push to'
    required: true
  registry-password:
    description: 'The password for the registry to push to'
    required: true
  image-prefix:
    description: 'The prefix for the image name'
    required: true
  push:
    description: 'Push the image to registry or not'
runs:
  using: "composite"
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 # v3.8.0
    - name: Docker extract metadata
      id: meta
      if: ${{ inputs.push == 'true' }}
      uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      with:
        images: ${{ inputs.registry }}/${{ inputs.image-prefix }}/${{ inputs.project }}
        labels: org.opencontainers.image.description=${{ inputs.project }}
        tags: type=sha
    - name: Log in to Registry
      if: ${{ inputs.push == 'true' }}
      uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 #v3.3.0
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.registry-username }}
        password: ${{ inputs.registry-password }}
    - name: Docker Build & Push
      id: build-push
      uses: docker/build-push-action@48aba3b46d1b1fec4febb7c5d0c644b249a11355 #v6.10.0
      with:
        file: "src/${{ inputs.project }}/build/Dockerfile"
        context: "src/${{ inputs.project }}"
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        push: ${{ inputs.push == 'true' }}
